local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local root = char:WaitForChild("RootPart")

-- ====== Boost de vitesse ======

local boostEnabled = true
local boostAmount = 1
local lastPos = root.Position

local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "MainGui"
gui.ResetOnSpawn = false

-- Boost UI Frame
local boostFrame = Instance.new("Frame", gui)
boostFrame.Size = UDim2.new(0, 250, 0, 120)
boostFrame.Position = UDim2.new(0, 10, 0, 10)
boostFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
boostFrame.BorderSizePixel = 0
boostFrame.BackgroundTransparency = 0.1
Instance.new("UICorner", boostFrame).CornerRadius = UDim.new(0, 8)

local boostTitle = Instance.new("TextLabel", boostFrame)
boostTitle.Size = UDim2.new(1, 0, 0, 30)
boostTitle.Position = UDim2.new(0, 0, 0, 0)
boostTitle.Text = "Boost de Vitesse"
boostTitle.BackgroundTransparency = 1
boostTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
boostTitle.Font = Enum.Font.GothamBold
boostTitle.TextScaled = true

local toggle = Instance.new("TextButton", boostFrame)
toggle.Size = UDim2.new(0, 230, 0, 30)
toggle.Position = UDim2.new(0, 10, 0, 35)
toggle.Text = "Boost : ACTIVÉ ✅"
toggle.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.Font = Enum.Font.Gotham
toggle.TextScaled = true
Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 6)

local sliderBack = Instance.new("Frame", boostFrame)
sliderBack.Size = UDim2.new(0, 230, 0, 10)
sliderBack.Position = UDim2.new(0, 10, 0, 80)
sliderBack.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
sliderBack.BorderSizePixel = 0
Instance.new("UICorner", sliderBack).CornerRadius = UDim.new(0, 4)

local sliderFill = Instance.new("Frame", sliderBack)
sliderFill.Size = UDim2.new(boostAmount / 10, 0, 1, 0)
sliderFill.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
sliderFill.BorderSizePixel = 0
Instance.new("UICorner", sliderFill).CornerRadius = UDim.new(0, 4)

local sliderValue = Instance.new("TextLabel", boostFrame)
sliderValue.Size = UDim2.new(1, 0, 0, 20)
sliderValue.Position = UDim2.new(0, 0, 0, 95)
sliderValue.BackgroundTransparency = 1
sliderValue.Text = "Vitesse : " .. tostring(boostAmount)
sliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
sliderValue.Font = Enum.Font.Gotham
sliderValue.TextScaled = true

-- Toggle bouton
toggle.MouseButton1Click:Connect(function()
	boostEnabled = not boostEnabled
	toggle.Text = boostEnabled and "Boost : ACTIVÉ ✅" or "Boost : DÉSACTIVÉ ❌"
	toggle.BackgroundColor3 = boostEnabled and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
end)

-- Slider gestion
local draggingSlider = false
sliderBack.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then draggingSlider = true end
end)
sliderBack.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then draggingSlider = false end
end)

UserInputService.InputChanged:Connect(function(input)
	if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
		local relX = math.clamp((input.Position.X - sliderBack.AbsolutePosition.X) / sliderBack.AbsoluteSize.X, 0, 1)
		sliderFill.Size = UDim2.new(relX, 0, 1, 0)
		boostAmount = math.floor((relX * 10) * 10) / 10
		sliderValue.Text = "Vitesse : " .. tostring(boostAmount)
	end
end)

-- Gérer le respawn du joueur
player.CharacterAdded:Connect(function(newChar)
	char = newChar
	root = newChar:WaitForChild("RootPart")
	lastPos = root.Position
end)

-- Boucle principale boost
RunService.RenderStepped:Connect(function()
	if not boostEnabled then return end
	if not root or not root.Parent then return end

	local currentPos = root.Position
	local moveDir = Vector3.new(currentPos.X - lastPos.X, 0, currentPos.Z - lastPos.Z)

	if moveDir.Magnitude > 0.1 then
		local boost = moveDir.Unit * boostAmount
		root.CFrame = root.CFrame + Vector3.new(boost.X, 0, boost.Z)
	end

	lastPos = currentPos
end)

-- Drag Boost UI
local boostDragging = false
local boostDragInput
local boostDragStart
local boostStartPos

local function updateBoostInput(input)
	local delta = input.Position - boostDragStart
	boostFrame.Position = UDim2.new(
		math.clamp(boostStartPos.X.Scale, 0, 1),
		math.clamp(boostStartPos.X.Offset + delta.X, 0, workspace.CurrentCamera.ViewportSize.X - boostFrame.AbsoluteSize.X),
		math.clamp(boostStartPos.Y.Scale, 0, 1),
		math.clamp(boostStartPos.Y.Offset + delta.Y, 0, workspace.CurrentCamera.ViewportSize.Y - boostFrame.AbsoluteSize.Y)
	)
end

boostFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		boostDragging = true
		boostDragStart = input.Position
		boostStartPos = boostFrame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				boostDragging = false
			end
		end)
	end
end)

boostFrame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		boostDragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == boostDragInput and boostDragging then
		updateBoostInput(input)
	end
end)


-- ====== King of The Hill ======

local teleportPos = Vector3.new(10.26, 180.83, -172.44)
local teleportDuration = 150 -- secondes (2min30)
local teleportInterval = 0.1 -- fréquence de téléport en secondes

-- KoTH UI Frame
local kothFrame = Instance.new("Frame", gui)
kothFrame.Size = UDim2.new(0, 250, 0, 80)
kothFrame.Position = UDim2.new(0, 10, 0, 150)
kothFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
kothFrame.BorderSizePixel = 0
Instance.new("UICorner", kothFrame).CornerRadius = UDim.new(0, 8)

local kothTitle = Instance.new("TextLabel", kothFrame)
kothTitle.Size = UDim2.new(1, 0, 0, 30)
kothTitle.Position = UDim2.new(0, 0, 0, 0)
kothTitle.Text = "King of The Hill"
kothTitle.BackgroundTransparency = 1
kothTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
kothTitle.Font = Enum.Font.GothamBold
kothTitle.TextScaled = true

local statusLabel = Instance.new("TextLabel", kothFrame)
statusLabel.Size = UDim2.new(1, 0, 0, 30)
statusLabel.Position = UDim2.new(0, 0, 0, 35)
statusLabel.Text = "Statut : En attente..."
statusLabel.BackgroundTransparency = 1
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextScaled = true

local teleporting = false
local elapsed = 0
local lastTeleportTime = 0

-- Reconnect root sur respawn (KoTH)
player.CharacterAdded:Connect(function(newChar)
	char = newChar
	root = char:WaitForChild("RootPart")
	lastPos = root.Position
end)

-- Fonction pour téléporter (KoTH)
local function teleportLoop(dt)
	if teleporting then
		if tick() - lastTeleportTime >= teleportInterval then
			if root and root.Parent then
				root.CFrame = CFrame.new(teleportPos)
			end
			lastTeleportTime = tick()
			elapsed = elapsed + teleportInterval
			statusLabel.Text = string.format("Statut : Téléportation... %.1f s restantes", teleportDuration - elapsed)
			if elapsed >= teleportDuration then
				teleporting = false
				statusLabel.Text = "Statut : En attente..."
				elapsed = 0
			end
		end
	end
end

-- Temps
